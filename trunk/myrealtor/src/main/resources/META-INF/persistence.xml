<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd" 
             version="1.0">
   <persistence-unit name="myrealtorDatabase">
   
      <provider>org.hibernate.ejb.HibernatePersistence</provider>
      
      
      
      
      <class>com.myrealtor.domain.beans.Address</class> 
      <class>com.myrealtor.domain.beans.ApartmentComplex</class>
      <class>com.myrealtor.domain.beans.BaseEntity</class>
      <class>com.myrealtor.domain.beans.Apartment</class>
      <class>com.myrealtor.domain.beans.Provider</class>      
      <class>com.myrealtor.domain.beans.User</class>      
      
      
      <properties>
      	 <property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/>      	 
      	 <property name="hibernate.hbm2ddl.auto" value="create-drop" />      	 
      	 <property name="hibernate.transaction.factory_class" value="org.hibernate.transaction.JDBCTransactionFactory" />
      	 
      	 <!-- Need to use this classic approach because of issue with WL10: 
      	 Caused by: org.hibernate.QueryException: ClassNotFoundException: org.hibernate.hql.ast.HqlToken
      	  -->
      	 <property name="hibernate.query.factory_class" value="org.hibernate.hql.classic.ClassicQueryTranslatorFactory" />
      	 
      	 <!--
      	 <property name="hibernate.hbm2ddl.auto" value="create" /> 
      	 <property name="hibernate.hbm2ddl.auto" value="create-drop" />
      	 
      	 <property name="hibernate.show_sql" value="true"/>
      	 
      	 <property name="hibernate.cache.provider_class" value="org.hibernate.cache.HashtableCacheProvider"/>
      	  -->  
      	          
         
      </properties>
   </persistence-unit>
</persistence>