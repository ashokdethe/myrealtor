Our Design:
- Add data heterogenity


Requires Sun JDK 1.6 to compile

Requires to configure a datasource in Weblogic 10.3
Default datasource jndi is mysql/ea1099DS
(Add steps here)

It's setup for MySQL both application. Another DB requires changes in the dataccess config file.

myrealtor dataaccess Spring config file: data-access-config.xml
apartment-management-webservice Hibernate config file: hibernate.cfg.xml


Database is setup to drop and recreate DB every time Weblogic restarts


Know bugs:
- Update provider email will only change local DB. Need to implement SOAP method to change external DB in apartment_management_webservice
- Need to use know IP address because Google map key. If need to use different IP, it will be necessary to create a key in this address:
http://code.google.com/apis/maps/signup.html

Change the file web-application-config.xml (bean id=googleGeoCodeService)



Did the group document the motivation? does the motivation make sense?
- Display information in a map. Easy to locate the apartment in some area.
- Integrate different apartment source in one website
- Integrate external service providers, like google maps and http://www.apartmentratings.com/rate/SearchResults?action=post&query=78727&x=20&y=4
- Allow user to make payments in an external service

Did the group discuss the capabilities of the B2B application (what services are offered, architecture diagram)
- System diagram with our system and providers (www.apartmentratings.com)

 Did the group explain how the design addresses the three layers of integration (give example of what heterogeneity is shown at each layer and how it get addressed)?
- View / (Business/Data) (EJB3)
- Presentation layer: MVC (JSP for view, Servlet for Controller and Domain objects for model )

Did the group explain how different type of users will use the system?
User and Provider mapped to the same table Users

Did the group explain the business components (e.g. type of beans and purpose of each bean)?
PaymentService
UserService

Did the group explain how a business transaction with a trading partner (B2B scenario) is achieved?
Search (Using WSDL and HTML parsing)
Payment Rent (Using WSDL)

Did the group discuss how they represent the trading partners?
Provider class with associated entities. Store search result as history

Did the group address content layer heterogeneity?
Search through wsdl interface and HTML parse

Did the group discuss how their data layer support their B2B application (e.g. purpose of different tables)
SearchCriteria and SearchResult and Apartment

Did you learn anything interesting from this design?
Is there any obvious problems with the design?
Is there any obvious problems with the presentation?






- Add data heterogenity

See realstate sample in this web site:
http://www.movoto.com/real-estate/homes-for-sale/FL/Tampa/18506-Chadwyck-Ct-431_T2355945.htm